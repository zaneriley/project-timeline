{
  "name": "gulp-jsoncombine",
  "version": "1.0.0",
  "description": "A plugin for Gulp to combine several JSON files using a custom function",
  "keywords": [
    "gulpplugin"
  ],
  "author": {
    "name": "Eli Yukelzon",
    "email": "reflog@gmail.com",
    "url": "https://github.com/reflog"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/reflog/gulp-jsoncombine"
  },
  "scripts": {
    "test": "istanbul test _mocha --report html -- test/*.js --reporter spec",
    "coveralls": "istanbul cover ./node_modules/mocha/bin/_mocha --report lcovonly -- -R spec && cat ./coverage/lcov.info | ./node_modules/coveralls/bin/coveralls.js && rm -rf ./coverage"
  },
  "dependencies": {
    "through": "*",
    "gulp-util": "~2.2.0"
  },
  "devDependencies": {
    "mocha": "*",
    "coveralls": "*",
    "mocha-lcov-reporter": "*",
    "istanbul": "*",
    "event-stream": "*",
    "should": "~2.1.0"
  },
  "engines": {
    "node": ">=0.10.0",
    "npm": ">=1.2.10"
  },
  "license": "MIT",
  "readme": "# gulp-jsoncombine\n[![NPM version][npm-image]][npm-url] [![Build Status][travis-image]][travis-url]  [![Coverage Status][coveralls-image]][coveralls-url] [![Dependency Status][depstat-image]][depstat-url]\n\n> jsoncombine plugin for [gulp](https://github.com/wearefractal/gulp)\n\n## Usage\n\nFirst, install `gulp-jsoncombine` as a development dependency:\n\n```shell\nnpm install --save-dev gulp-jsoncombine\n```\n\nThen, add it to your `gulpfile.js`:\n\n** This plugin will collect all the json files provided to it, parse them, put them in a dictionary where the keys of that dictionary are the filenames (sans the '.json' postfix) and pass that to a processor function. That function decides how that output should look in the resulting file. **\n\n```javascript\nvar jsoncombine = require(\"gulp-jsoncombine\");\n\ngulp.src(\"./src/*.json\")\n\t.pipe(jsoncombine(\"result.js\",function(data){...}))\n\t.pipe(gulp.dest(\"./dist\"));\n```\n\n## API\n\n### jsoncombine(fileName, processor)\n\n#### fileName\nType: `String`  \n\nThe output filename\n\n#### processor\nType: `Function`  \n\nThe function that will be called with the dictionary containing all the data from the processes JSON files, where the keys of the dictionary, would be the names of the files (sans the '.json' postfix).\n\nThe function should return a new `Buffer` that would be writter to the output file.\n\n\n## License\n\n[MIT License](http://en.wikipedia.org/wiki/MIT_License)\n\n[npm-url]: https://npmjs.org/package/gulp-jsoncombine\n[npm-image]: https://badge.fury.io/js/gulp-jsoncombine.png\n\n[travis-url]: http://travis-ci.org/reflog/gulp-jsoncombine\n[travis-image]: https://secure.travis-ci.org/reflog/gulp-jsoncombine.png?branch=master\n\n[coveralls-url]: https://coveralls.io/r/reflog/gulp-jsoncombine\n[coveralls-image]: https://coveralls.io/repos/reflog/gulp-jsoncombine/badge.png\n\n[depstat-url]: https://david-dm.org/reflog/gulp-jsoncombine\n[depstat-image]: https://david-dm.org/reflog/gulp-jsoncombine.png\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/reflog/gulp-jsoncombine/issues"
  },
  "_id": "gulp-jsoncombine@1.0.0",
  "dist": {
    "shasum": "4718746f95ddcd3ae064f7c56738340581da5ad3"
  },
  "_from": "gulp-jsoncombine@",
  "_resolved": "https://registry.npmjs.org/gulp-jsoncombine/-/gulp-jsoncombine-1.0.0.tgz"
}
